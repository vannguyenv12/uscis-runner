const pool = require('./db/db');

async function backfillUpdatedStatusAt() {
  try {
    const [rows] = await pool.query(`
      SELECT receipt_number, status_en, action_desc, updated_at
      FROM uscis
      WHERE updated_status_at IS NULL
    `);

    if (!rows.length) {
      console.log('‚úÖ Kh√¥ng c√≥ h·ªì s∆° n√†o c·∫ßn c·∫≠p nh·∫≠t updated_status_at.');
      return;
    }

    for (const row of rows) {
      const { receipt_number, status_en, action_desc, updated_at } = row;

      // T√¨m b·∫£n ghi cu·ªëi c√πng trong status_log c√≥ kh√°c status_en ho·∫∑c action_desc
      const [[log]] = await pool.query(
        `
        SELECT updated_at_log, status_en, action_desc
        FROM status_log
        WHERE receipt_number = ?
          AND is_log_email = 0
        ORDER BY updated_at_log DESC
        LIMIT 1
      `,
        [receipt_number]
      );

      let updatedStatusAt = null;

      if (!log) {
        // Kh√¥ng c√≥ log c≈© ‚Üí d√πng updated_at hi·ªán t·∫°i
        updatedStatusAt = updated_at;
        console.warn(
          `‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y log cho ${receipt_number}, d√πng updated_at hi·ªán t·∫°i.`
        );
      } else if (
        log.status_en !== status_en ||
        log.action_desc !== action_desc
      ) {
        // C√≥ log nh∆∞ng status ƒë√£ kh√°c ‚Üí d√πng updated_at hi·ªán t·∫°i
        updatedStatusAt = updated_at;
        console.log(
          `üîÅ ƒê√£ thay ƒë·ªïi tr·∫°ng th√°i cho ${receipt_number}, c·∫≠p nh·∫≠t updated_status_at.`
        );
      } else {
        // Kh√¥ng ƒë·ªïi tr·∫°ng th√°i ‚Üí g√°n updated_status_at b·∫±ng log
        updatedStatusAt = log.updated_at_log;
        console.log(
          `‚Ü©Ô∏è Gi·ªØ nguy√™n tr·∫°ng th√°i ${receipt_number}, updated_status_at = log.`
        );
      }

      const [result] = await pool.query(
        `
        UPDATE uscis
        SET updated_status_at = ?
        WHERE receipt_number = ?
      `,
        [updatedStatusAt, receipt_number]
      );

      console.log(
        `‚úÖ C·∫≠p nh·∫≠t ${receipt_number} ‚Üí updated_status_at = ${updatedStatusAt}`
      );
    }

    console.log('üéâ Ho√†n t·∫•t c·∫≠p nh·∫≠t updated_status_at.');
  } catch (err) {
    console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t updated_status_at:', err.message);
  }
}

backfillUpdatedStatusAt();
